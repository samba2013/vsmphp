<?php


namespace vsm\dal;


use vsm\bl\User;

class UserRepository extends VsmModel
{

    public static $table = "admin.users";
    public static $model = User::class;
    private static $Instance;

    public static function getInstance(){
        if(self::$Instance == null){
            self::$Instance = new self();

        }
        return self::$Instance;
    }


    public function __construct()
    {
        parent::__construct();
    }



    public function SignIn($username,$password){


        $user=null;
        try {


            $query = "SELECT * from ".self::$table." where is_active=1 and username = ? and password=?;";

            $stmt = $this->db->prepare($query);

            $stmt->execute([$username,sha1($password)]);

            $user = $stmt->fetchObject(User::class);


            return $user;

        }
        catch (\PDOException $e){

            return null;
        }



        return null;



    }

    /**
     * @param $mixed
     * @return int|null
     * @throws \PDOException
     */
    public function Add($mixed)
    {
        $this->CheckUsername($mixed,0);
        return parent::Add($mixed); // TODO: Change the autogenerated stub
    }

    /**
     * @param $mixed
     * @return bool
     * @throws \PDOException
     */
    public function Update($mixed)
    {
        $this->CheckUsername($mixed,1);
        return parent::Update($mixed); // TODO: Change the autogenerated stub
    }

    /**
     * @param $mixed
     * @throws \PDOException
     */
    private function CheckUsername($mixed,$count)
    {
        $existUsername = $this->Filter(['username' => $mixed->username]);
        if (count($existUsername) > $count) {
            throw new \PDOException("Username already exist");
        }

    }


}